* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:root {
  font-size: 62.5%;

  --color-base-white: hsl(0, 0%, 100%);
  --color-base-gray-100: hsl(196, 100%, 98%);
  --color-base-gray-300: hsla(0, 0%, 100%, 0.2);
  --color-base-gray-800: hsl(240, 6%, 13%);
  --color-base-gray-900: hsl(240, 5%, 7%);
  --color-base-blue-200: hsl(195, 50%, 52%);
  --color-base-blue-500: hsl(195, 46%, 40%);
  --color-base-blue-600: hsl(195, 91%, 25%);
  --color-base-red-500: hsl(0, 29%, 36%);
}

html,
body,
input {
  font-family: "Mulish", sans-serif;
}

body {
  font-size: 1.6rem;
  background-color: var(--color-base-white);
  color: var(--color-base-gray-900);
}

#app {
  display: grid;
  grid-template-rows: max-content 1fr max-content;
  height: 100vh;
}

.container {
  margin: 0 auto;
}

header,
footer {
  background: var(--color-base-blue-600);
  max-height: 7.2rem;
}

header>div {
  width: 100%;
  max-width: 1262px;
  padding: 1.6rem 2.8rem;
  display: grid;
  grid-template-columns: max-content 1fr max-content;
  gap: 2.6rem;
  font-weight: 600;
}

.logo {
  background-color: var(--color-base-white);
  width: 4rem;
  height: 4rem;
  padding: .8rem;
  border-radius: 50%;
}

.input-wrapper label {
  width: 1px;
  height: 1px;
  overflow: hidden;
  position: absolute;
}

.input-wrapper input {
  width: 100%;
  padding: 1.2rem 1.4rem;

  background-color: var(--color-base-gray-300);
  border: 0;
  outline: none;
  border-radius: 0.4rem;

  font-size: 1.6rem;
  font-weight: 600;
}

.input-wrapper input::placeholder {
  opacity: 0.80;
  color: var(--color-base-white);
}

.avatar {
  width: 4.2rem;
  height: 4.2rem;

  object-fit: cover;
  border-radius: 50%;
}

main {
  overflow-y: auto;
}

main h1 {
  padding-top: 3.1rem;
  font-size: 2.4rem;
}

h1, h2, h3 {
  font-weight: 700;
  line-height: 160%;
}

#post-img {
  width: 100%;
  aspect-ratio: 16/8;
  object-fit: cover;
  display: block;
  transform: scale(1.01);
  border-radius: .5rem;
}

#post {
  max-width: 80rem;
  margin: 0 auto;
}

#post h1,
#related h2 {
  font-size: 2.4rem;
  font-weight: 700;
  padding: 0;
}

#like,
#dislike {
  background-color: var(--color-base-blue-600);
  padding: 1.2rem;
  border-radius: 50%;
}

#dislike {
  transform: scaleX(-1) rotate(180deg);
}

.reaction {
  display: flex;
  gap: 1rem;
  padding-top: .8rem;
}

#like:hover{
  background-color: var(--color-base-blue-200);
  transform: scale(1.1);
}

#dislike:hover{
  background-color: var(--color-base-red-500);
  transform: scale(1.1) scaleX(-1) rotate(180deg);
}

#post p {
  display: flex;
  font-size: 1.6rem;
  line-height: 160%;
  padding-top: 3.1rem;
}

.article {
  padding: 3.1rem 2.2rem 0;
  display: grid;
  grid-template-rows: max-content max-content 1fr;
}

#related {
  display: grid;
  grid-template-rows: repeat(6, max-content);
  justify-content: center;
  gap: 3.2rem;
  padding: 3.4rem 2.2rem;
}

.card {
  display: grid;
  grid-template-columns: max-content 1fr;
  gap: 1.6rem;
  max-width: 38.4rem;
}

.card img {
  width: 15.2rem;
  height: 8.4rem;
  object-fit: cover;
  border-radius: .5rem;
  display: block;
  transition: all 300ms ease-out;
  flex-shrink: 0;
}

.card img:hover {
  filter: hue-rotate(7deg) contrast(101%) saturate(200%);
  transform: scale(1.02) rotate(-1deg);
}

.card h3 {
  font-size: 1.8rem;
  margin: 0;
}

.card p {
  font-size: 1.4rem;
  margin: 0;
}

footer {
  text-align: center;
  padding: 1.6rem;
  font-weight: 600;
  background-color: var(--color-base-blue-500);
  color: var(--color-base-white);
  font-size: 1.6rem;
  max-height: 6.4rem;
}

header {
  --startY: -100%;
  animation: move .2s;
}

footer {
  --startY: 100%;
  animation: move .2s;
}

@media screen and (max-width: 320px) {
  .card {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }
}

@media screen and (min-width: 804px) {
  main {
    padding: 4.4rem;
  }
 
  .article {
    display: grid;
    grid-template-areas:
      "a b"
      "c c";
    padding: 3.2rem 0 0;
    align-items: center;
  }

  .article h1 {
    grid-area: a;
  }

  .article .reaction{
    grid-area: b;
    margin-left: auto;
  }

  .article p {
    grid-area: c;
  }

  .reaction {
    padding: 0;
  }
}

@media screen and (min-width: 1440px){
  main {
      display: grid;
      grid-template-columns: 1fr max-content;
      gap: 3.4rem;
      margin: 0 auto;
  }

  #related {
    padding: 0;
  }
}

@keyframes move {
  from {
    transform: translateY(var(--startY));
  }
}

